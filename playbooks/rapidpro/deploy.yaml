---
- name: deploy rapidpro
  hosts: rapidpro
  become: True
  gather_facts: True
  tags:
    - rapidpro
  roles:
   - DavidWittman.redis
  tasks:
    - name: Add system user
      user:
        name: "{{ system_user }}"
        shell: /bin/bash
        group: "{{ system_group }}"
        append: yes
        createhome: yes

    - include: ../tasks/ubuntu_network_settings.yaml

    - name: update apt cache
      apt: update_cache=yes

    - name: Install system-wide dependencies
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 600
      with_items:
        - build-essential
        - git
        - libpq-dev
        - libxml2-dev
        - libxslt1-dev
        - libffi-dev
        - lib32ncurses5-dev
        - nginx
        #- npm
        - nodejs
        - python-pip
        - python-virtualenv
        - python-software-properties
        - python-celery
        - python-setuptools
        - python-psycopg2
        - python2.7-dev
        - tcl8.5
        - "postgresql-contrib-{{ postgresql_version}}"
        - "postgresql-{{ postgresql_version }}-postgis-{{ postgresql_ext_postgis_version }}"
        - coffeescript
        - libmagic-dev
        - libc-dev 
        - musl-dev 
        - libpng-dev 
        - libfreetype6-dev 
        - libxslt-dev 
        - zlib1g-dev 
        - libncurses5-dev 
        - libpcre3-dev 
        - libreadline6-dev 
        - libzmq-dev
        #- node-less

   # - name: create node symlink
   #   file: src=/usr/bin/nodejs dest=/usr/bin/node state=link

    - name: install npm packages
      npm:
        name: "{{ item }}"
        state: latest
        global: yes
      with_items:
        - less
        - coffee-script
        - bower

    - name: Ensure required checkout directories are present
      file:
        state: directory
        owner: "{{ system_user }}"
        group: www-data
        path: "{{ item }}"
      with_items:
        - "{{ versioned_path }}"
        - "{{ checkout_path }}"
        - "{{ venv_path }}"
        - "{{ log_path }}"

    - include: ../tasks/ntp.yaml

    - name: Git clone
      git:
        accept_hostkey: "yes"
        repo: "{{ git_url }}"
        dest: "{{ checkout_path }}"
        version: "{{ git_branch }}"
        depth: 1

    - name: Install base pip requirements
      pip:
        state: present
        requirements: "{{ checkout_path }}/pip-freeze.txt"
        virtualenv: "{{ venv_path }}"
        extra_args: --allow-all-external

    - name: Install numpy
      pip:
        state: present
        name: "{{ item }}"
        virtualenv: "{{ venv_path }}"
      with_items:
        - numpy

    - name: Install oauthlib
      pip:
        state: present
        name: "{{ item }}"
        virtualenv: "{{ venv_path }}"
        extra_args: --upgrade --force
      with_items:
        - requests-oauthlib
        - uwsgi

    - name: Copy over our local settings from template
      template:
        src: templates/opt/rapidpro/settings.py
        dest: "{{ checkout_path }}/temba/settings.py"
        owner: root
        group: root
        mode: 0644
   
    - name: Copy 500.html from template
      template:
        src: templates/opt/rapidpro/500.html
        dest: "{{ checkout_path }}/templates/500.html"
        
 
    - name: install bower dependencies
      bower: 
        path: "{{ checkout_path }}"
        state: present

    - name: Syncdb, migrate and collect static files
      django_manage:
        command: "{{ item }}"
        app_path: "{{ checkout_path }}"
        virtualenv: "{{ venv_path }}"
      with_items:
        - migrate --noinput
        - compress --extension=".haml" --force -v0
        - collectstatic --noinput

    - name: Changing static folder permission
      file:
        path: "{{ checkout_path }}/sitestatic/"
        owner: "{{ system_user }}"
        group: "{{ system_group }}"
        mode: 0755

    - name: Changing mediafolder permission
      file:
        path: "{{ checkout_path }}/media/"
        owner: "{{ system_user }}"
        group: "{{ system_group }}"
        mode: 0755

    #- name: Copy celery init.d script
    #  template:
    #    src: templates/etc/init.d/celeryd-rapidpro
    #    dest: /etc/init.d/celeryd-rapidpro
    #    mode: 0755

    #- name: Copy celery default script
    #  template:
    #    src: templates/etc/default/celeryd-rapidpro
    #    dest: /etc/default/celeryd-rapidpro
    #    mode: 0755

    - name: Make the new codebase current
      file:
        force: yes
        state: link
        dest: "{{ codebase_path }}"
        src: "{{ checkout_path }}"

    - name: Copy upstart script
      template:
        src: templates/etc/init/{{ item }}
        dest: /etc/init/{{ item }}
        mode: 0644
      with_items:
        - rapidpro.conf
        - rapidpro-celerybeat.conf
        - rapidpro-celeryd.conf

    - include: ../tasks/nginx.yaml cfg_file=rapidpro_uwsgi

    - name: Copy uwsgi.ini
      template:
        src: templates/common/uwsgi_rapidpro.ini
        dest: "{{ checkout_path }}/uwsgi.ini"
        mode: 0644

    - name: Restart rapidpro, nginx, redis & celeryd
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - rapidpro
        - rapidpro-celeryd
        - nginx
        - rapidpro-celerybeat
